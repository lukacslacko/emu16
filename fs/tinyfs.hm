#include <string.hm>
void write_eeprom(byte data, char eeprom, int addr);
byte read_eeprom(char eeprom, int addr);

void format(char eeprom) {
  byte i;
  for(;i<32;++i){
    write_eeprom(0,eeprom,i);
  }
  write_eeprom(1,eeprom,16);
}

struct file_t {
  char name[12];
  bool dir;
  int size;
  int start;
  int cp;
  byte iip;
  byte flags;
  char eeprom;
}

bool _read_byte(file_t* file, byte* r)

bool get_next_filename(file_t* file, char* filename) {
  if(file.dir){
    byte nf;
    if(_read_byte(file,&nf)){
      nf&=0x7f;
      byte i;
      char e=file.eeprom;
      for(;i<12;++i){
        *filename=read_eeprom(e,nf<<8);
        filename++;
        nf++;
      }
      return true;
    }
  }
  return false;
}

void rewind(file_t* file) {
  if((file.start&0x7fff)==0){
    file.iip=32;
  }else{
    file.iip=16;
  }
  file.cp=file.start;
}

void rewind_by(file_t* file, int offset) {
  if(file.dir){return;}
  for(;offset>0;--offset) {
    iip--;
    if(file.cp==file.start){
      if((file.cp&0x7fff)==0){
        if(file.iip==32){return;}
      }else{
        if(file.iip==16){return;}
      }
    }else{
      if(file.iip==1){
        file.iip=255;
        file.cp=(read_eeprom(file.eeprom,file.cp)&0x7f)<<8;
      }
    }
  }
}

void rename(file_t* file, char* filename) {
  strncpy(file.name, filename, 12);
  byte i;
  int s=file.start;
  char e=file.eeprom;
  char* n=file.name;
  for(;i<9;++i) {
    write_eeprom(*n,e,s+i);
  }
}

int write_file(file_t* file, int count, byte* data) {
  if(file.dir){return 0;}
  int i;
  byte ps;
  char e=file.eeprom;
  {
  int np;
  byte h;
  byte l;
  byte ifp;
  for(;count>0;--count) {
    file.size++;
    if(file.size==0x1000){
      break;
    }
    file.iip++;
    i++;
    if(file.iip==0) {
      if(file.cp==file.start){
        ifp=15;
      }else{
        ifp=1;
      }
      np=(read_eeprom(e,file.cp+ifp)&0x7f)<<8;
      if(np==0) {
        byte p;
        bool fp;
        for(;p<128;++p){
          h=p>>3;
          l=1<<(p&7);
          ps=read_eeprom(e,h+16);
          if((ps&l)==0){
            fp=true;
            ps|=l;
            write_eeprom(ps,e,h+16);
            break;
          }
        }
        if(!fp){
          file.iip=255;
          break;
        }
      }
      write_eeprom(np>>8,e,file.cp+ifp);
      write_eeprom(file.cp>>8,e,np);
      file.cp=np;
      file.iip=2;
    }
    write_eeprom(*data,e,file.cp+file.iip);
    data++;
  }
  }
  write_eeprom(file.size,e,file.start+13);
  ps=read_eeprom(e,file.start+12)&0x3f;
  ps|=(file.size>>2)&0xc0;
  write_eeprom(ps,e,file.start+12);
  ps=read_eeprom(e,file.start+14)&0x7f;
  ps|=(file.size>>3)&0x80;
  write_eeprom(ps,e,file.start+14);
  ps=read_eeprom(e,file.start+15)&0x7f;
  ps|=(file.size>>4)&0x80;
  write_eeprom(ps,e,file.start+15);
  return i;
}

void set_flags(file_t* file, byte flags) {
  flags&=0x3f;
  byte f=read_eeprom(file.eeprom,file.start+12);
  f&=0xc0;
  f|=flags;
  write_eeprom(f,file.eeprom,file.start+12);
}

int read_file(file_t* file, int count, byte* data) {
  if(file.dir){return 0;}
  int i;
  for(;i<count;++i) {
    if(_read_byte(file,data)){
      data++;
    }else{
      break;
    }
  }
  return i;
}

void make_root(char eeprom, file_t* root) {
  byte i;
  int nf;
  file_t r;
  char* filename=&r.name
  for(;i<12;++i){
    *filename=read_eeprom(e,nf);
    filename++;
    nf++;
  }
  r.dir=true;
  r.iip=32;
  r.eeprom=eeprom;
  r.cp=0;
  r.start=0;
  i=read_eeprom(eeprom,12);
  r.flags=i&0x3f;
  r.size=read_eeprom(eeprom,13);
  r.size|=(i&0xc0)<<2;
  r.size|=(read_eeprom(eeprom,14)&0x80)<<3;
  r.size|=(read_eeprom(eeprom,15)&0x80)<<4;
  *root=r;
}

bool search(file_t* dir, char* filename) {
  if(dir.dir) {
    char fn[12];
    strncpy(fn,filename,12);
    file_t d=*dir;
    rewind(&d);
    char cf[12];
    while(get_next_filename(&d,cf)){
      if(memcmp(cf,fn,12)==0) {
        return true;
      }
    }
  }
  return false;
}

bool open(file_t* dir, file_t* file, char* filename) {
  if(dir.dir) {
    bool ae;
    char fn[12];
    int f;
    strncpy(fn,filename,12);
    file_t d=*dir;
    rewind(&d);
    char cf[12];
    while(get_next_filename(&d,cf)){
      if(memcmp(cf,fn,12)==0) {
        ae=true;
        break;
      }
    }
    if(!ae) {
      char e=dir.eeprom;
      byte ps;
      byte h;
      byte l;
      byte nfp;
      bool fp;
      int np;
      for(;nfp<128;++nfp){
        h=nfp>>3;
        l=1<<(nfp&7);
        ps=read_eeprom(e,h+16);
        if((ps&l)==0){
          fp=true;
          ps|=l;
          write_eeprom(ps,e,h+16);
          break;
        }
      }
      if(!fp){
        return false;
      }
      byte p;
      dir.size++;
      if(dir.size==0x1000){
        break;
      }
      dir.iip++;
      if(dir.iip==0) {
        if(dir.cp==dir.start){
          ifp=15;
        }else{
          ifp=1;
        }
        if(dir.start==0){
         ifp+=16;
        }
        np=(read_eeprom(e,dir.cp+ifp)&0x7f)<<8;
        if(np==0) {
          for(p=0;p<128;++p){
            h=p>>3;
            l=1<<(p&7);
            ps=read_eeprom(e,h+16);
            if((ps&l)==0){
              fp=true;
              ps|=l;
              write_eeprom(ps,e,h+16);
              break;
            }
          }
          if(!fp){
            file.iip=255;
            return false;
          }
        }
        write_eeprom(np>>8,e,dir.cp+ifp);
        write_eeprom(dir.cp>>8,e,np);
        d.cp=np;
        d.iip=2;
      }
      write_eeprom(nfp,e,&d.cp+file.iip);
      
      write_eeprom(&d.size,e,dir.start+13);
      ps=read_eeprom(e,&d.start+12)&0x3f;
      ps|=(&d.size>>2)&0xc0;
      write_eeprom(ps,e,&d.start+12);
      ps=read_eeprom(e,&d.start+14)&0x7f;
      ps|=(&d.size>>3)&0x80;
      write_eeprom(ps,e,&d.start+14);
      ps=read_eeprom(e,&d.start+15)&0x7f;
      ps|=(&d.size>>4)&0x80;
      write_eeprom(ps,e,&d.start+15);
    }
    rewind(&d)
  }
  return false;
}
