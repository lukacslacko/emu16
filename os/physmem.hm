struct all_pages_t {
  byte used[32];
}

static all_pages_t all_pages;

void init_pages() {
  all_pages.used[0] = 3;
}

bool get_pages(int n_pages, int pid) {
  int p;
  int i;
  for (; p<256; ++p) {
    if (n_pages == i) {
      return true;
    }
    byte h = p>>3;
    byte l = 1<<(p&7);
    if ((all_pages.used[h] & l) == 0) {
      all_pages.used[h] = all_pages.used[h] | l;
      procs[pid].pages[i] = p;
      i++;
    }
  }
  return false;
}

bool free_pages(int pid) {
  int i;
  for (; i<16; ++i) {
    byte p = procs[pid].pages[i];
    byte h = p>>3;
    byte l = 1<<(p&7);
    all_pages.used[h] = all_pages.used[h] & (~l);
  }
}

void load_pages(pages_t* pages) asm;
